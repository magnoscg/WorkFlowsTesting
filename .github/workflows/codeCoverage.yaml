name: Test And Coverage Report

on:
  pull_request:
    branches: ["master", "develop"]

concurrency:
  group: build-ios-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_test:
    name: ${{ matrix.command }} on ï£¿ iOS 16 (xcode ${{ matrix.xcode }}, ${{ matrix.macos }})
    runs-on: ${{ matrix.macos }}
    strategy:
      fail-fast: false
      matrix:
        xcode: ["14.2"]
        macos: ["macos-latest"]
        project: ["workflows/workflows.xcodeproj"]
        scheme: ["workflows"]
        command: ["Test"]
        platform: ["platform=iOS Simulator,name=iPhone 14,OS=16.2"]
        exclude:
          - macos: "macos-11"
            xcode: "12.0.1"
          - macos: "macos-10.15"
            xcode: "13.0"
          - macos: "macos-10.15"
            xcode: "12.5.1"
          - platform: "watchOS"
            xcode: "12.0.1"
    steps:
      - name: Install Dependencies
        run: gem install slather
      - name: Switch xcode to ${{ matrix.xcode }}
        uses: maxim-lobanov/setup-xcode@v1.2.3
        with:
          xcode-version: ${{ matrix.xcode }}
      - name: Double-check macOS version (${{ matrix.macos }})
        run: sw_vers
      - name: Code Checkout
        uses: actions/checkout@v3
      - name: list files
        run: ls /Users/runner/work/WorkFlowsTesting/WorkFlowsTesting/workflows
      - name: Check xcodebuild version
        run: xcodebuild -version
      - name: Check xcode embedded SDKs
        run: xcodebuild -showsdks
      - name: Show buildable schemes
        run: xcodebuild -list
        working-directory: workflows
      - name: Show eligible build destinations for ${{ matrix.scheme }}
        run: xcodebuild -showdestinations -scheme ${{ matrix.scheme }}
        working-directory: workflows
      - name: Test
        run: |
          xcodebuild clean build test \
          -project ${{ matrix.project }} \
          -scheme ${{ matrix.scheme }} \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          -destination '${{ matrix.platform }}' \
          ONLY_ACTIVE_ARCH=YES \
          -resultBundlePath TestResults \
          -derivedDataPath DerivedData \
      - name: Generate report
        uses: kishikawakatsumi/xcresulttool@v1.7.1
        with:
          path: TestResults.xcresult
        if: success() || failure()

      - name: Convert code coverage for CI_macOS
        run: slather coverage -x --scheme ${{ matrix.scheme }} --output-directory "reports" -b DerivedData "${{ matrix.project }}"
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ github.workspace }}/reports/cobertura.xml # optional
          flags: unittests # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
